#pragma checksum "/Users/benjaminwasserman/Desktop/Chapman University/Junior/Database/final/Bet/Bet/Views/Home/Picks.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fadebc510c711bf48dddc3135eee1a19941c80cb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Picks), @"mvc.1.0.view", @"/Views/Home/Picks.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Picks.cshtml", typeof(AspNetCore.Views_Home_Picks))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/Users/benjaminwasserman/Desktop/Chapman University/Junior/Database/final/Bet/Bet/Views/_ViewImports.cshtml"
using Bet;

#line default
#line hidden
#line 2 "/Users/benjaminwasserman/Desktop/Chapman University/Junior/Database/final/Bet/Bet/Views/_ViewImports.cshtml"
using Bet.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fadebc510c711bf48dddc3135eee1a19941c80cb", @"/Views/Home/Picks.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3ad17fe0765363ff80112d1726f68ff9c19092b2", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Picks : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onload", new global::Microsoft.AspNetCore.Html.HtmlString("getPicks()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "/Users/benjaminwasserman/Desktop/Chapman University/Junior/Database/final/Bet/Bet/Views/Home/Picks.cshtml"
  
    ViewData["Title"] = "Picks";

#line default
#line hidden
            BeginContext(41, 4, true);
            WriteLiteral("<h1>");
            EndContext();
            BeginContext(46, 17, false);
#line 4 "/Users/benjaminwasserman/Desktop/Chapman University/Junior/Database/final/Bet/Bet/Views/Home/Picks.cshtml"
Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(63, 9, true);
            WriteLiteral("</h1>\r\n\r\n");
            EndContext();
            BeginContext(72, 731, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "524fc0144241469eb317fa130c1712e9", async() => {
                BeginContext(98, 631, true);
                WriteLiteral(@"
    <br />

    <!-- Populate the table to show games  <input type=""button"" value=""Get Picks"" onclick=""getPicks()""> -->


    <div id=""picks"">
        <table id=""pickTable"" class=""table"" style=""width:100%"">
            <thead>
                <tr>
                    <th>Home Team</th>
                    <th>Visiting Team</th>
                    <th>Game Time</th>
                    <th>Home Score</th>
                    <th>Visiting Score</th>
                    <th>Pick</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <a class=""export""");
                EndContext();
                BeginWriteAttribute("href", " href=\"", 729, "\"", 778, 1);
#line 28 "/Users/benjaminwasserman/Desktop/Chapman University/Junior/Database/final/Bet/Bet/Views/Home/Picks.cshtml"
WriteAttributeValue("", 736, Url.Action("Export", new {table="Picks"}), 736, 42, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(779, 17, true);
                WriteLiteral("> Export </a>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(803, 6508, true);
            WriteLiteral(@"



<script>

    function getFormattedDate(data) {
        return data.substr(0, 10) + ' ' + data.substr(11, 18);

    }


    function getPicks() {

        $('#pickTable').find('tbody').empty();

        $.ajax({
            url: 'https://localhost:5001/api/Pick/',
            type: 'GET',
            success: function (data, request) {
                for (var i = 0; i < data.length; i++) {
                    var formattedDate = getFormattedDate(data[i].gameDate);
                    var id = data[i].id;
                    var markup = ""<tr id=\""row"" + data[i].id + ""\""><td>""
                        + data[i].homeTeam + ""</td><td>""
                        + data[i].visitingTeam + ""</td><td>""
                        + formattedDate + ""</td><td>""
                        + data[i].homeScore + ""</td><td>""
                        + data[i].visitingScore + ""</td>""
                        + ""<td id="" + data[i].id + "">""
                        + data[i].teamPick + ""</td><td>""
     ");
            WriteLiteral(@"                   + ""<td id=\""buttonCol"" + data[i].id + ""\"">""
                        + ""<input type='button' id=\""button"" + data[i].id + ""\"" value='Edit' onclick='editPick(\"""" + data[i].id + ""\"", \"""" + data[i].gameId + ""\"", \"""" + data[i].homeTeam + ""\"", \"""" + data[i].visitingTeam + ""\"", \"""" + data[i].isFuture + ""\"", \"""" + data[i].homeTeamId + ""\"", \"""" + data[i].visitingTeamId + ""\"")'>""
                        + ""</td></tr>"";

                    $('#pickTable').append(markup)
                }
            },
            error: function (request) {
                // handle error
            }
        })
    }


    function editPick(pick, gameId, home, away, isFuture, homeId, visitingId) {



        if (isFuture == 1) {

            $('#' + pick + '').empty();
            var buttonMarkup = ""<input type='button' id=\""submit"" + pick + ""\"" value='Submit' onclick='postPick(\"""" + pick + ""\"", \"""" + gameId + ""\"", \"""" + home + ""\"", \"""" + away + ""\"", \"""" + isFuture + ""\"", \"""" + homeId + ""\"", \");
            WriteLiteral(@""""" + visitingId + ""\"")'>""

            var markup = ""<select id='pick'>""
                + ""<option value='home'>"" + home + ""</option>""
                + ""<option value='visit'>"" + away + ""</option>""
                + ""<option value='none'>None</option>""

            $('#' + pick + '').append(markup);
            $('#buttonCol' + pick + '').append(buttonMarkup);
            $('#button' + pick).remove();

        }
        else {
            alert(""Can not update a pick for a game that's already happened"")
        }



    }


    function postPick(pickId, gameId, home, away, isFuture, homeId, visitingId) {
        var pick = $(""#pick option:selected"").val();
        var teamId = 0;
        if (pick == ""home"") {
            teamId = homeId; 
            $('#' + pickId).empty();
            $('#' + pickId).append(home);
            $('#submit' + pickId).remove();
            var buttonMarkup = ""<input type='button' id=\""button"" + pickId + ""\"" value='Edit' onclick='editPick(\"""" + pic");
            WriteLiteral(@"kId + ""\"", \"""" + gameId + ""\"", \"""" + home + ""\"", \"""" + away + ""\"", \"""" + isFuture + ""\"", \"""" + homeId + ""\"", \"""" + visitingId + ""\"")'>""
            $('#buttonCol' + pickId).append(buttonMarkup);

            // ajax call update
            $.ajax({
                url: 'https://localhost:5001/api/Pick/' + pickId,
                type: 'PUT',
                data: JSON.stringify({
                    ""id"": pickId,
                    ""pick"": teamId,
                    ""game"": gameId,
                }),
                success: function(data, request){
                    alert(""Your pick has been made"");
                },
                error: function(request) {
                    // handle error
                },
                dataType: ""json"",
                contentType: ""application/json""
            })

            alert(""You have changed your pick to the "" + home);
        }
        else if (pick==""none"") {
            teamId = visitingId;
            //$('#' + pickId).");
            WriteLiteral(@"empty();
            //$('#' + pickId).append(away);
            //$('#submit' + pickId).remove();
            $('#row' + pickId).remove();
            // remove the entire row here 
            //var buttonMarkup = ""<input type='button' id=\""button"" + pickId + ""\"" value='Edit' onclick='editPick(\"""" + pickId + ""\"", \"""" + gameId + ""\"", \"""" + home + ""\"", \"""" + away + ""\"", \"""" + homeId + ""\"", \"""" + visitingId + ""\"")'>""
            //$('#buttonCol' + pickId).append(buttonMarkup);

            // ajax call update
            $.ajax({
                url: 'https://localhost:5001/api/Pick/' + pickId,
                type: 'PUT',
                data: JSON.stringify({
                    ""id"": pickId,
                    ""pick"": 0,
                    ""game"": gameId,
                }),
                success: function(data, request){
                    alert(""Your pick has been made"");
                },
                error: function(request) {
                    // handle error
          ");
            WriteLiteral(@"      },
                dataType: ""json"",
                contentType: ""application/json""
            })

            alert(""You have removed your pick"");
        }
        else {
            teamId = visitingId;
            $('#' + pickId).empty();
            $('#' + pickId).append(away);
            $('#submit' + pickId).remove();
            var buttonMarkup = ""<input type='button' id=\""button"" + pickId + ""\"" value='Edit' onclick='editPick(\"""" + pickId + ""\"", \"""" + gameId + ""\"", \"""" + home + ""\"", \"""" + away + ""\"", \"""" + homeId + ""\"", \"""" + visitingId + ""\"")'>""
            $('#buttonCol' + pickId).append(buttonMarkup);

            // ajax call update
            $.ajax({
                url: 'https://localhost:5001/api/Pick/' + pickId,
                type: 'PUT',
                data: JSON.stringify({
                    ""id"": pickId,
                    ""pick"": teamId,
                    ""game"": gameId,
                }),
                success: function(data, request){
    ");
            WriteLiteral(@"                alert(""Your pick has been made"");
                },
                error: function(request) {
                    // handle error
                },
                dataType: ""json"",
                contentType: ""application/json""
            })
            alert(""You have changed your pick to the "" + away);
        }

    }</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
